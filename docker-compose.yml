version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: vkpay_postgres
    environment:
      POSTGRES_DB: vkpay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Loshara7
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vkpay-network

  vkpay-api:
    build:
      context: ./VkPayTest
      dockerfile: Dockerfile
    container_name: vkpay_api
    expose:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/weatherforecast"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vkpay-network

  nginx:
    image: nginx:alpine
    container_name: vkpay_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - vkpay-api
    restart: unless-stopped
    networks:
      - vkpay-network

  certbot:
    image: certbot/certbot
    container_name: vkpay_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: echo "Skipping..."
    networks:
      - vkpay-network

volumes:
  postgres_data:

networks:
  vkpay-network:
    driver: bridge
